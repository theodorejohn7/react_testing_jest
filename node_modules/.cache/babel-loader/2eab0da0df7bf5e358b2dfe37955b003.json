{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\"; // import React, {   useEffect } from \"react\";\n// import MoviesList from \"./MoviesList\";\n\nimport \"./ApiApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  movies: [],\n  isLoading: false,\n  error: null,\n  post: {},\n  final: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      console.log(\"inside fetch success state\", action.payload);\n      return {\n        isLoading: false,\n        movies: action.payload //  .map((movieData) => {\n        //   return {\n        //     id: movieData.episode_id,\n        //     title: movieData.title,\n        //     openingText: movieData.opening_crawl,\n        //     releaseDate: movieData.release_date\n        //   };\n        // }),\n        // error: null,\n\n      };\n\n    case \"FETCH_ERROR\":\n      return {\n        isLoading: false,\n        error: \"Something went wrong\",\n        movies: [],\n        post: {},\n        final: null\n      };\n  }\n};\n\nfunction ApiApp() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); //   useEffect(() => {\n\n  async function fetchMoviesHandler() {\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n\n      if (!response.ok) {\n        console.log(\"inside eror\");\n        dispatch({\n          type: \"FETCH_ERROR\"\n        });\n      }\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: data.results\n        });\n        console.log(\"fetch out\");\n        console.log(\"payload data\", state.type);\n      }\n    } catch (error) {\n      dispatch({\n        type: \"FETCH_ERROR\"\n      });\n    }\n  } //   }, []);\n\n  /* eslint-disable */\n\n\n  console.log(\"state\", state);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [state.isLoading ? \"Loading\" : state.post.id, /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" \", state.isLoading ? \"Loading\" : state.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApiApp, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ApiApp;\nexport default ApiApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiApp\");","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js"],"names":["React","useReducer","initialState","movies","isLoading","error","post","final","reducer","state","action","type","console","log","payload","ApiApp","dispatch","fetchMoviesHandler","response","fetch","ok","data","json","results","id"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\n// import React, {   useEffect } from \"react\";\n\n// import MoviesList from \"./MoviesList\";\nimport \"./ApiApp.css\";\n\nconst initialState = {\n  movies: [],\n  isLoading: false,\n  error: null,\n  post: {},\n  final: null,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n        console.log(\"inside fetch success state\",action.payload);\n        \n      return {\n        isLoading: false,\n        movies: action.payload\n        \n        \n        //  .map((movieData) => {\n        //   return {\n        //     id: movieData.episode_id,\n        //     title: movieData.title,\n        //     openingText: movieData.opening_crawl,\n        //     releaseDate: movieData.release_date\n        //   };\n        // }),\n        // error: null,\n      };\n    case \"FETCH_ERROR\":\n      return {\n        isLoading: false,\n        error: \"Something went wrong\",\n        movies: [],\n        post: {},\n        final: null,\n      };\n  }\n};\n\nfunction ApiApp() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  //   useEffect(() => {\n  async function fetchMoviesHandler() {\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (!response.ok) {\n        console.log(\"inside eror\");\n\n        dispatch({ type: \"FETCH_ERROR\" });\n      }\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n        dispatch({ type: \"FETCH_SUCCESS\", payload: data.results });\n        console.log(\"fetch out\");\n        console.log(\"payload data\",state.type);\n      }\n    } catch (error) {\n      dispatch({ type: \"FETCH_ERROR\" });\n    }\n  }\n  //   }, []);\n  /* eslint-disable */\nconsole.log(\"state\",state);\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {state.isLoading ? \"Loading\" : state.post.id}\n       <h4> {state.isLoading ? \"Loading\" : state.error}</h4>\n        \n        {/* {!state.isLoading && state.movies.length > 0 && (\n          <MoviesList movies={movies} />\n        )}\n        {isLoading && <p>Loading...*.*.*</p>}\n        {!isLoading && movies.length === 0 && <p>Found no Movies</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {<p>{final}</p>} */}\n        <h1>Welcome</h1>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default ApiApp;\n"]},"metadata":{},"sourceType":"module"}