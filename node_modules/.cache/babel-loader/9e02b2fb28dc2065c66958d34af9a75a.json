{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport classes from \"./Movie.module.css\";\nimport Movie from \"./Movie\";\nimport * as React from \"react\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  begin: true,\n  movies: [],\n  isLoading: false,\n  error: null,\n  final: null\n};\n\nconst reducer = (_state, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        begin: false,\n        isLoading: false,\n        movies: action.payload,\n        error: null,\n        final: null\n      };\n\n    case \"FETCH_ERROR\":\n      return {\n        begin: false,\n        isLoading: false,\n        error: \"Something went wrong\",\n        movies: [],\n        final: null\n      };\n\n    case \"FETCH_LOADING\":\n      return {\n        begin: false,\n        isLoading: true,\n        error: null,\n        movies: [],\n        final: null\n      };\n\n    case \"FETCH_DONE\":\n      return {\n        begin: false,\n        isLoading: true,\n        error: null,\n        movies: [],\n        final: true\n      };\n  }\n};\n\nfunction DataFetching() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  async function fetchMoviesHandler() {\n    let response;\n\n    try {\n      dispatch({\n        type: \"FETCH_LOADING\"\n      });\n      response = await fetch(\"https://swapi.dev/api/films/\");\n    } catch (error) {\n      response = error;\n    } finally {\n      dispatch({\n        type: \"FETCH_DONE\"\n      });\n\n      if (!response.ok) {\n        dispatch({\n          type: \"FETCH_ERROR\"\n        });\n      }\n\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: data.results\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.parent,\n      children: [state.begin && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this), state.isLoading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }, this), state.error && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: state.movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n          title: movie.title,\n          releaseDate: movie.release_date,\n          openingText: movie.opening_crawl\n        }, movie.episode_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), state.final && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.parent,\n      children: \"Thank You\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DataFetching, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = DataFetching;\nexport default DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js"],"names":["useReducer","classes","Movie","React","LinearProgress","Box","initialState","begin","movies","isLoading","error","final","reducer","_state","action","type","payload","DataFetching","state","dispatch","fetchMoviesHandler","response","fetch","ok","data","json","results","parent","width","map","movie","title","release_date","opening_crawl","episode_id"],"mappings":"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","sourcesContent":["import { useReducer } from \"react\";\n\nimport classes from \"./Movie.module.css\";\n\nimport Movie from \"./Movie\";\n\nimport * as React from \"react\";\n \nimport LinearProgress from \"@mui/material/LinearProgress\";\n \nimport Box from \"@mui/material/Box\";\n \n\nconst initialState = {\n  begin: true,\n  movies: [],\n  isLoading: false,\n  error: null,\n  final: null,\n};\nconst reducer = (_state, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        begin: false,\n\n        isLoading: false,\n        movies: action.payload,\n        error: null,\n        final: null,\n      };\n    case \"FETCH_ERROR\":\n      return {\n        begin: false,\n\n        isLoading: false,\n        error: \"Something went wrong\",\n        movies: [],\n        final: null,\n      };\n    case \"FETCH_LOADING\":\n      return {\n        begin: false,\n\n        isLoading: true,\n        error: null,\n        movies: [],\n        final: null,\n      };\n    case \"FETCH_DONE\":\n      return {\n        begin: false,\n\n        isLoading: true,\n        error: null,\n        movies: [],\n        final: true,\n      };\n  }\n};\n\nfunction DataFetching() {\n   \n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  async function fetchMoviesHandler() {\n    let response;\n\n    try {\n      dispatch({ type: \"FETCH_LOADING\" });\n\n      response = await fetch(\"https://swapi.dev/api/films/\");\n    } catch (error) {\n      response = error;\n    } finally {\n      dispatch({ type: \"FETCH_DONE\" });\n      if (!response.ok) {\n        dispatch({ type: \"FETCH_ERROR\" });\n      }\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({ type: \"FETCH_SUCCESS\", payload: data.results });\n      }\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section className={classes.parent}>\n        {state.begin && <h2>Welcome</h2>}\n\n        {state.isLoading && (\n         <Box sx={{ width: '100%' }}>\n         <LinearProgress />\n       </Box>\n        )}\n        {state.error && <h2>{state.error}</h2>}\n        <div>\n          {state.movies.map((movie) => (\n            <Movie\n              key={movie.episode_id}\n              title={movie.title}\n              releaseDate={movie.release_date}\n              openingText={movie.opening_crawl}\n            />\n          ))}\n        </div>\n      </section>\n      {state.final && <h1 className={classes.parent}>Thank You</h1>}\n    </React.Fragment>\n  );\n}\n\nexport default DataFetching;\n"]},"metadata":{},"sourceType":"module"}