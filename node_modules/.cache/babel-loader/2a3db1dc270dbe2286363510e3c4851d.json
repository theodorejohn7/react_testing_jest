{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport MoviesList from \"./MoviesList\";\nimport \"./ApiApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  movies: [],\n  isLoading: false,\n  error: null,\n  post: {},\n  final: nul\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        loading: false,\n        movies: payload.data.results.map(movieData => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date\n          };\n        }),\n        error: null\n      };\n\n    case \"FETCH_ERROR\":\n      return {\n        loading: false,\n        error: \"Something went wrong\",\n        moves: []\n      };\n  }\n};\n\nfunction ApiApp() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    async function fetchMoviesHandler() {\n      try {\n        const response = await fetch(\"https://swapi.dev/api/films/\");\n\n        if (!response.ok) {\n          // throw new Error(\"Something went unplanned!!!\");\n          dispatch({\n            type: \"FETCH_ERROR\"\n          });\n        }\n\n        if (response.ok) {\n          const data = await response.json();\n          dispatch({\n            type: \"FETCH_SUCCESS\",\n            payload: data\n          });\n        }\n      } catch (error) {\n        dispatch({\n          type: \"FETCH_ERROR\"\n        });\n      }\n    }\n  }, []);\n  /* eslint-disable */\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!state.isLoading && state.movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 57\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...*.*.*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Found no Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 47\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: final\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApiApp, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = ApiApp;\nexport default ApiApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiApp\");","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js"],"names":["React","useReducer","useEffect","MoviesList","initialState","movies","isLoading","error","post","final","nul","reducer","state","action","type","loading","payload","data","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","moves","ApiApp","dispatch","fetchMoviesHandler","response","fetch","ok","json","length"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport MoviesList from \"./MoviesList\";\nimport \"./ApiApp.css\";\n\nconst initialState = {\n  movies: [],\n  isLoading: false,\n  error: null,\n  post: {},\n  final: nul,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        loading: false,\n        movies: payload.data.results.map((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date,\n          };\n        }),\n        error: null,\n      };\n    case \"FETCH_ERROR\":\n      return {\n        loading: false,\n        error: \"Something went wrong\",\n        moves: [],\n      };\n  }\n};\n\nfunction ApiApp() {\n    const [state, dispatch]=useReducer(reducer, initialState);\n  useEffect(() => {\n    async function fetchMoviesHandler() {\n      \n\n      try {\n        const response = await fetch(\"https://swapi.dev/api/films/\");\n\n        if (!response.ok) {\n          // throw new Error(\"Something went unplanned!!!\");\n          dispatch({ type: \"FETCH_ERROR\" });\n        }\n        if (response.ok) {\n            const data = await response.json();\n\n            dispatch({type:\"FETCH_SUCCESS\", payload:data })\n        }\n      } catch (error) {\n        dispatch({ type: \"FETCH_ERROR\" });\n      \n      } \n    \n    }\n  },[]);\n  /* eslint-disable */ \n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!state.isLoading && state.movies.length > 0 && <MoviesList movies={movies} />}\n        {isLoading && <p>Loading...*.*.*</p>}\n        {!isLoading && movies.length === 0 && <p>Found no Movies</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {<p>{final}</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default ApiApp;\n"]},"metadata":{},"sourceType":"module"}