{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/router-app/src/components/FileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\n/**\n * Component to handle file upload. Works for image\n * uploads, but can be edited to work for any file.\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FileUpload() {\n  _s();\n\n  // State to store uploaded file\n  const [file, setFile] = React.useState(\"\"); // Handles file upload event and updates state\n\n  function handleUpload(event) {\n    setFile(event.target.files[0]); // Add code here to upload file to server\n    // ...\n  }\n  /* eslint-disable */\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"upload-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Filename: \", file.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File type: \", file.type]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File size: \", file.size, \" bytes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(ImageThumb, {\n      image: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n/**\n * Component to display thumbnail of image.\n */\n\n_s(FileUpload, \"7PLWWOeW5KRjw5GGk5Tv0yLJLTU=\");\n\n_c = FileUpload;\n\nconst ImageThumb = _ref => {\n  let {\n    images\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: URL.createObjectURL(images),\n    alt: images.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}; // export default function App() {\n//   return <FileUpload />;\n// }\n\n\n_c2 = ImageThumb;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FileUpload\");\n$RefreshReg$(_c2, \"ImageThumb\");","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/router-app/src/components/FileUpload.js"],"names":["React","FileUpload","file","setFile","useState","handleUpload","event","target","files","name","type","size","ImageThumb","images","URL","createObjectURL"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,KAAK,CAACI,QAAN,CAAe,EAAf,CAAxB,CAFmC,CAInC;;AACA,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BH,IAAAA,OAAO,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAP,CAD2B,CAG3B;AACA;AACD;AACH;;;AACE,sBACE;AAAK,IAAA,EAAE,EAAC,YAAR;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEH;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,+BAAcH,IAAI,CAACO,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gCAAeP,IAAI,CAACQ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gCAAeR,IAAI,CAACS,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAKGT,IAAI,iBAAI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YALX;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;AAED;AACA;AACA;;GAzBwBD,U;;KAAAA,U;;AA0BxB,MAAMW,UAAU,GAAG,QAAgB;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AACjC,sBAAO;AAAK,IAAA,GAAG,EAAEC,GAAG,CAACC,eAAJ,CAAoBF,MAApB,CAAV;AAAuC,IAAA,GAAG,EAAEA,MAAM,CAACJ;AAAnD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD,C,CAKA;AACA;AACA;;;MAPMG,U","sourcesContent":["import React from \"react\";\n\n/**\n * Component to handle file upload. Works for image\n * uploads, but can be edited to work for any file.\n */\nexport default function FileUpload() {\n  // State to store uploaded file\n  const [file, setFile] = React.useState(\"\");\n\n  // Handles file upload event and updates state\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n\n    // Add code here to upload file to server\n    // ...\n  }\n/* eslint-disable */\n  return (\n    <div id=\"upload-box\">\n      <input type=\"file\" onChange={handleUpload} />\n      <p>Filename: {file.name}</p>\n      <p>File type: {file.type}</p>\n      <p>File size: {file.size} bytes</p>\n      {file && <ImageThumb image={file} />}\n    </div>\n  );\n}\n\n/**\n * Component to display thumbnail of image.\n */\nconst ImageThumb = ({ images }) => {\n  return <img src={URL.createObjectURL(images)} alt={images.name} />;\n};\n\n\n// export default function App() {\n//   return <FileUpload />;\n// }\n"]},"metadata":{},"sourceType":"module"}