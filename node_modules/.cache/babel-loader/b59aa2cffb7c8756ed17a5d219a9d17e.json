{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\"; // import React, {   useEffect } from \"react\";\n// import MoviesList from \"./MoviesList\";\n\nimport \"./ApiApp.css\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  movies: [],\n  isLoading: false,\n  error: null,\n  final: null\n};\n\nconst reducer = (state, action) => {\n  console.log(\"action data\", action.payload);\n\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        isLoading: false,\n        movies: action.payload,\n        error: null,\n        final: null\n      };\n\n    case \"FETCH_ERROR\":\n      return {\n        isLoading: false,\n        error: \"Something went wrong\",\n        movies: [],\n        final: null\n      };\n\n    case \"FETCH_LOADING\":\n      console.log(\"fetch loading\");\n      return {\n        isLoading: true,\n        error: null,\n        movies: [],\n        final: null\n      };\n  }\n};\n\nfunction ApiApp() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); //   useEffect(() => {\n\n  async function fetchMoviesHandler() {\n    try {\n      dispatch({\n        type: \"FETCH_LOADING\"\n      });\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n\n      if (!response.ok) {\n        console.log(\"inside eror\");\n        dispatch({\n          type: \"FETCH_ERROR\"\n        });\n      }\n\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: data.results\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: \"FETCH_ERROR\"\n      });\n    }\n  }\n  /* eslint-disable */\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [state.isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Loading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 31\n          }, this), state.movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n            title: movie.title,\n            releaseDate: movie.release_date,\n            openingText: movie.opening_crawl\n          }, movie.episode_id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApiApp, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ApiApp;\nexport default ApiApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiApp\");","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js"],"names":["React","useReducer","Movie","initialState","movies","isLoading","error","final","reducer","state","action","console","log","payload","type","ApiApp","dispatch","fetchMoviesHandler","response","fetch","ok","data","json","results","map","movie","title","release_date","opening_crawl","episode_id"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\n// import React, {   useEffect } from \"react\";\n\n// import MoviesList from \"./MoviesList\";\nimport \"./ApiApp.css\";\nimport Movie from \"./Movie\";\n\nconst initialState = {\n  movies: [],\n  isLoading: false,\n  error: null,\n  final: null,\n};\nconst reducer = (state, action) => {\n  console.log(\"action data\", action.payload);\n\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        isLoading: false,\n        movies: action.payload,\n        error: null,\n        final: null,\n      };\n    case \"FETCH_ERROR\":\n      return {\n        isLoading: false,\n        error: \"Something went wrong\",\n        movies: [],\n        final: null,\n      };\n    case \"FETCH_LOADING\":\n      console.log(\"fetch loading\");\n      return {\n        isLoading: true,\n        error: null,\n        movies: [],\n        final: null,\n      };\n  }\n};\n\nfunction ApiApp() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //   useEffect(() => {\n  async function fetchMoviesHandler() {\n    try {\n      dispatch({ type: \"FETCH_LOADING\" });\n\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n\n      if (!response.ok) {\n        console.log(\"inside eror\");\n\n        dispatch({ type: \"FETCH_ERROR\" });\n      }\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({ type: \"FETCH_SUCCESS\", payload: data.results });\n      }\n    } catch (error) {\n      dispatch({ type: \"FETCH_ERROR\" });\n    }\n  }\n\n  /* eslint-disable */\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <>\n      <div >\n\n          {state.isLoading && <h2>Loading</h2>}\n          {state.movies.map((movie) => (\n            <Movie\n              key={movie.episode_id}\n              title={movie.title}\n              releaseDate={movie.release_date}\n              openingText={movie.opening_crawl}\n            />\n          ))}\n          </div>\n        </>\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default ApiApp;\n"]},"metadata":{},"sourceType":"module"}