{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/router-app/src/components/withCounter.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withCounter = WrappedComponent => {\n  class NewComponent extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.incrementCount = () => {\n        this.setState(prevState => {\n          return {\n            count: prevState.count + 1\n          };\n        });\n      };\n\n      this.state = {\n        count: 0\n      };\n    }\n\n    render() {\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        count: this.state.count,\n        incrementCount: this.incrementCount,\n        name: \"Theo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    }\n\n  }\n\n  return NewComponent;\n};\n\nexport default withCounter;","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/router-app/src/components/withCounter.js"],"names":["React","withCounter","WrappedComponent","NewComponent","Component","constructor","props","incrementCount","setState","prevState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAIC,gBAAD,IAAsB;AACxC,QAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACzCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;;AADiB,WAMnBC,cANmB,GAMF,MAAM;AACrB,aAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,iBAAO;AAAEC,YAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;AAA3B,WAAP;AACD,SAFD;AAGD,OAVkB;;AAEjB,WAAKC,KAAL,GAAa;AACXD,QAAAA,KAAK,EAAE;AADI,OAAb;AAGD;;AAMDE,IAAAA,MAAM,GAAG;AACP,0BACE,QAAC,gBAAD;AACE,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,KADpB;AAEE,QAAA,cAAc,EAAE,KAAKH,cAFvB;AAGE,QAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;;AApBwC;;AAsB3C,SAAOJ,YAAP;AACD,CAxBD;;AA0BA,eAAeF,WAAf","sourcesContent":["import React from \"react\";\n\nconst withCounter = (WrappedComponent) => {\n  class NewComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        count: 0,\n      };\n    }\n    incrementCount = () => {\n      this.setState((prevState) => {\n        return { count: prevState.count + 1 };\n      });\n    };\n    render() {\n      return (\n        <WrappedComponent\n          count={this.state.count}\n          incrementCount={this.incrementCount}\n          name=\"Theo\"\n        />\n      );\n    }\n  }\n  return NewComponent;\n};\n\nexport default withCounter;\n"]},"metadata":{},"sourceType":"module"}