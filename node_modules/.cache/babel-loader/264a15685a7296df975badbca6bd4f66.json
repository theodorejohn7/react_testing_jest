{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/router-app/src/components/test2.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport React, { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ACTION = {\n  ADD_TODO: \"add-todo\",\n  TOGGLE_TODO: 'toggle-todo'\n};\n\nfunction reducer(todos, action) {\n  switch (action.type) {\n    case ACTION.ADD_TODO:\n      return [...todos, createTodo(action.payload.name)];\n\n    case ACTION.TOGGLE_TODO:\n      return;\n\n    default:\n      return todos;\n  }\n}\n\nfunction createTodo(name) {\n  return {\n    id: Date.now(),\n    name: name,\n    completed: false\n  };\n}\n\nexport default function test2() {\n  _s();\n\n  const [todos, dispatch] = useReducer(reducer, []); // const [count, setCount] = useState(0);\n\n  const [name, setName] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({\n      type: ACTION.ADD_TODO,\n      payload: {\n        name: name\n      }\n    });\n    setName('');\n  }\n\n  console.log(todos);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(test2, \"wkixyyOg+F+yBGjMiYLLg+E+NDc=\");","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/router-app/src/components/test2.js"],"names":["useState","React","useReducer","ACTION","ADD_TODO","TOGGLE_TODO","reducer","todos","action","type","createTodo","payload","name","id","Date","now","completed","test2","dispatch","setName","handleSubmit","e","preventDefault","console","log","target","value"],"mappings":";;;AAAA,SAAWA,QAAX,QAA4B,OAA5B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,QAAQ,EAAE,UADG;AAEbC,EAAAA,WAAW,EAAE;AAFA,CAAf;;AAKA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,MAAM,CAACC,QAAZ;AACE,aAAO,CAAC,GAAGG,KAAJ,EAAWG,UAAU,CAACF,MAAM,CAACG,OAAP,CAAeC,IAAhB,CAArB,CAAP;;AACN,SAAKT,MAAM,CAACE,WAAZ;AACI;;AAEA;AACE,aAAOE,KAAP;AAPJ;AASD;;AAED,SAASG,UAAT,CAAoBE,IAApB,EAA0B;AACxB,SAAO;AACLC,IAAAA,EAAE,EAAEC,IAAI,CAACC,GAAL,EADC;AAELH,IAAAA,IAAI,EAAEA,IAFD;AAGLI,IAAAA,SAAS,EAAE;AAHN,GAAP;AAKD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBhB,UAAU,CAACI,OAAD,EAAU,EAAV,CAApC,CAD8B,CAE9B;;AAEA,QAAM,CAACM,IAAD,EAAOO,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;;AAGA,WAASoB,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACFJ,IAAAA,QAAQ,CAAC;AACPT,MAAAA,IAAI,EAAEN,MAAM,CAACC,QADN;AAEPO,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEA;AADC;AAFF,KAAD,CAAR;AAMAO,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEa,YAAhB;AAAA,6BACE;AAAO,QAAA,KAAK,EAAER,IAAd;AAAoB,QAAA,QAAQ,EAAGS,CAAD,IAAOF,OAAO,CAACE,CAAC,CAACI,MAAF,CAASC,KAAV;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;GA1BuBT,K","sourcesContent":["import   { useState  } from 'react';\nimport React, { useReducer } from \"react\";\n\nconst ACTION = {\n  ADD_TODO: \"add-todo\",\n  TOGGLE_TODO: 'toggle-todo'\n};\n\nfunction reducer(todos, action) {\n  switch (action.type) {\n    case ACTION.ADD_TODO:\n      return [...todos, createTodo(action.payload.name)];\ncase ACTION.TOGGLE_TODO:\n    return \n\n    default:\n      return todos;\n  }\n}\n\nfunction createTodo(name) {\n  return {\n    id: Date.now(),\n    name: name,\n    completed: false,\n  };\n}\n\nexport default function test2() {\n  const [todos, dispatch] = useReducer(reducer, []);\n  // const [count, setCount] = useState(0);\n\n  const [name, setName] = useState(\"\");\n\n\n  function handleSubmit(e) {\n      e.preventDefault()\n    dispatch({\n      type: ACTION.ADD_TODO,\n      payload: {\n        name: name,\n      },\n    });\n    setName('')\n  }\n\n  console.log(todos);\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input value={name} onChange={(e) => setName(e.target.value)} />\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}