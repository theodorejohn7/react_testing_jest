{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  loading: true,\n  error: \"\",\n  post: {}\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        loading: false,\n        post: action.payload,\n        error: \"\"\n      };\n\n    case \"FETCH_ERROR\":\n      return {\n        loading: false,\n        post: {},\n        error: \"Something went wrong\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction DataFetching() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicod.com/posts/1\").then(response => {\n      dispatch({\n        type: \"FETCH_SUCCESS\",\n        payload: response.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: 'FETCH_ERROR'\n      });\n      setLoading(false);\n      setPost({});\n      SpeechSynthesisErrorEvent(\"Something went wrong!\");\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [state.loading ? 'Loading' : state.post.title, state.error ? state.error : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 11\n  }, this);\n}\n\n_s(DataFetching, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = DataFetching;\nexport default DataFetching;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataFetching\");","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js"],"names":["React","useReducer","useEffect","axios","initialState","loading","error","post","reducer","state","action","type","payload","DataFetching","dispatch","get","then","response","data","catch","setLoading","setPost","SpeechSynthesisErrorEvent","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,IADU;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO;AACLN,QAAAA,OAAO,EAAE,KADJ;AAELE,QAAAA,IAAI,EAAEG,MAAM,CAACE,OAFR;AAGLN,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO;AACLD,QAAAA,OAAO,EAAE,KADJ;AAELE,QAAAA,IAAI,EAAE,EAFD;AAGLD,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF;AACE,aAAOG,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,SAASI,YAAT,GAAwB;AAAA;;AACtB,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBb,UAAU,CAACO,OAAD,EAAUJ,YAAV,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CACFY,GADH,CACO,6CADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBH,MAAAA,QAAQ,CAAC;AAAEH,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,OAAO,EAAEK,QAAQ,CAACC;AAA3C,OAAD,CAAR;AAED,KALH,EAMGC,KANH,CAMUb,KAAD,IAAW;AACjBQ,MAAAA,QAAQ,CAAC;AAACH,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR;AAGCS,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAC,MAAAA,yBAAyB,CAAC,uBAAD,CAAzB;AACD,KAbH;AAcD,GAfQ,EAeN,EAfM,CAAT;AAiBA,sBAAQ;AAAA,eAETb,KAAK,CAACJ,OAAN,GAAgB,SAAhB,GAA4BI,KAAK,CAACF,IAAN,CAAWgB,KAF9B,EAGTd,KAAK,CAACH,KAAN,GAAcG,KAAK,CAACH,KAApB,GAA2B,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAKD;;GAzBQO,Y;;KAAAA,Y;AA2BT,eAAeA,YAAf","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst initialState = {\n  loading: true,\n  error: \"\",\n  post: {},\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        loading: false,\n        post: action.payload,\n        error: \"\",\n      };\n    case \"FETCH_ERROR\":\n      return {\n        loading: false,\n        post: {},\n        error: \"Something went wrong\",\n      };\n    default:\n      return state;\n  }\n};\n\nfunction DataFetching() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  useEffect(() => {\n    axios\n      .get(\"https://jsonplaceholder.typicod.com/posts/1\")\n      .then((response) => {\n        dispatch({ type: \"FETCH_SUCCESS\", payload: response.data });\n         \n      })\n      .catch((error) => {\n       dispatch({type: 'FETCH_ERROR'})\n\n\n        setLoading(false);\n        setPost({});\n        SpeechSynthesisErrorEvent(\"Something went wrong!\");\n      });\n  }, []);\n\n  return (<div>\n\n{state.loading ? 'Loading' : state.post.title}\n{state.error ? state.error :null }\n  </div>)\n}\n\nexport default DataFetching;\n"]},"metadata":{},"sourceType":"module"}