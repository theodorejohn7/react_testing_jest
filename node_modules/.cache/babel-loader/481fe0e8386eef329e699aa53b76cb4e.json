{"ast":null,"code":"var _jsxFileName = \"/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\"; // import React, {   useEffect } from \"react\";\n// import MoviesList from \"./MoviesList\";\n\nimport \"./ApiApp.css\";\nimport Movie from \"./Movie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  movies: [],\n  isLoading: true,\n  error: null,\n  post: {},\n  final: null\n};\n\nconst reducer = (state, action) => {\n  console.log(\"action data\", action.payload);\n\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        isLoading: false,\n        movies: action.payload\n      };\n\n    case \"FETCH_ERROR\":\n      return {\n        isLoading: false,\n        error: \"Something went wrong\",\n        movies: [],\n        post: {},\n        final: null\n      };\n\n    case \"FETCH_LOADING\":\n      console.log('fetch loading');\n      return {\n        isLoading: false\n      };\n  }\n};\n\nfunction ApiApp() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState); //   useEffect(() => {\n\n  async function fetchMoviesHandler() {\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      dispatch({\n        type: \"FETCH_LOADING\"\n      });\n\n      if (!response.ok) {\n        console.log(\"inside eror\");\n        dispatch({\n          type: \"FETCH_ERROR\"\n        });\n      }\n\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: data.results\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: \"FETCH_ERROR\"\n      });\n    }\n  }\n  /* eslint-disable */\n\n\n  console.log(\"state\", state.movies.length);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [state.isLoading && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this), state.movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n          title: movie.title,\n          releaseDate: movie.release_date,\n          openingText: movie.opening_crawl\n        }, movie.episode_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ApiApp, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ApiApp;\nexport default ApiApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApiApp\");","map":{"version":3,"sources":["/home/dell/Desktop/Theo/REACT JS/router-app/src/components/DataFetching.js"],"names":["React","useReducer","Movie","initialState","movies","isLoading","error","post","final","reducer","state","action","console","log","payload","type","ApiApp","dispatch","fetchMoviesHandler","response","fetch","ok","data","json","results","length","map","movie","title","release_date","opening_crawl","episode_id"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\n// import React, {   useEffect } from \"react\";\n\n// import MoviesList from \"./MoviesList\";\nimport \"./ApiApp.css\";\nimport Movie from \"./Movie\";\n\nconst initialState = {\n  movies: [],\n  isLoading: true,\n  error: null,\n  post: {},\n  final: null,\n};\nconst reducer = (state, action) => {\n  console.log(\"action data\", action.payload);\n\n  switch (action.type) {\n    case \"FETCH_SUCCESS\":\n      return {\n        isLoading: false,\n        movies: action.payload,\n      };\n    case \"FETCH_ERROR\":\n      return {\n        isLoading: false,\n        error: \"Something went wrong\",\n        movies: [],\n        post: {},\n        final: null,\n      };\n    case \"FETCH_LOADING\":\n        console.log('fetch loading');\n      return {\n        isLoading: false\n      };\n  }\n};\n\nfunction ApiApp() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  //   useEffect(() => {\n  async function fetchMoviesHandler() {\n    try {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      dispatch({type:\"FETCH_LOADING\"});\n\n      if (!response.ok) {\n        console.log(\"inside eror\");\n\n        dispatch({ type: \"FETCH_ERROR\" });\n      }\n      if (response.ok) {\n        const data = await response.json();\n        dispatch({ type: \"FETCH_SUCCESS\", payload: data.results });\n      }\n    } catch (error) {\n      dispatch({ type: \"FETCH_ERROR\" });\n    }\n  }\n \n  /* eslint-disable */\n  console.log(\"state\", state.movies.length);\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {/* {state.isLoading ? \"Loading\" : state.post.id} */}\n        {/* <h4> {state.isLoading ? \"Loading\" : state.movies[0]}</h4> */}\n        <>\n        {state.isLoading && <h2>Loading</h2>}\n          {state.movies.map((movie) => (\n            <Movie\n              key={movie.episode_id}\n              title={movie.title}\n              releaseDate={movie.release_date}\n              openingText={movie.opening_crawl}\n            />\n          ))}\n        </>\n\n      \n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default ApiApp;\n"]},"metadata":{},"sourceType":"module"}